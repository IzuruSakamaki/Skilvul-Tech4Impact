{"ast":null,"code":"var _jsxFileName = \"/home/izuru/Documents/Code/Pelajaran/Skilvul/Skilvul-Tech4Impact/14-react-router/soal-02/src/pages/MovieList.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport MovieCard from \"../components/MovieCard\";\nimport MovieListFilter from \"../components/MovieListFilter\";\nimport { useLocation } from \"react-router-dom\";\nimport qs from \"qs\";\nimport movies from \"../dummy-data\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar MovieList = function MovieList() {\n  _s();\n\n  var location = useLocation();\n  var shows = [10, 20, 30];\n  var categories = [\"TV\", \"Movie\"];\n  var fields = [\"title\", \"score\"]; // Variable yang akan menampung parameter yang telah diberikan oleh user\n\n  var params = qs.parse(location.search, {\n    ignoreQueryPrefix: true\n  }); // Variable yang kita gunakan untuk melakukan penyaringan data\n\n  var filter = {\n    show: params.show || shows[0],\n    category: params.category || categories[0],\n    sort: params.sort || fields[0]\n  }; // Variable yang akan menyimpan data-data yang sudah difilter menggunakan variable filter diatas\n\n  var filteredMovies = movies.filter(function (o) {\n    return o.type === filter.category;\n  }).sort(function (a, b) {\n    return a[filter.sort] > b[filter.sort] ? -1 : 1;\n  }).slice(0, filter.show);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row\",\n    children: [/*#__PURE__*/_jsxDEV(MovieListFilter, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, _this), filteredMovies.map(function (movie) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-lg-3 col-md-4 col-sm-6 col-12\",\n        children: /*#__PURE__*/_jsxDEV(MovieCard, {\n          movie: movie\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, _this)\n      }, movie.mal_id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, _this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(MovieList, \"pkHmaVRPskBaU4tMJuJJpV42k1I=\", false, function () {\n  return [useLocation];\n});\n\n_c = MovieList;\nexport default MovieList;\n\nvar _c;\n\n$RefreshReg$(_c, \"MovieList\");","map":{"version":3,"sources":["/home/izuru/Documents/Code/Pelajaran/Skilvul/Skilvul-Tech4Impact/14-react-router/soal-02/src/pages/MovieList.js"],"names":["MovieCard","MovieListFilter","useLocation","qs","movies","MovieList","location","shows","categories","fields","params","parse","search","ignoreQueryPrefix","filter","show","category","sort","filteredMovies","o","type","a","b","slice","map","movie","mal_id"],"mappings":";;;;AAAA,OAAOA,SAAP,MAAsB,yBAAtB;AACA,OAAOC,eAAP,MAA4B,+BAA5B;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,OAAOC,EAAP,MAAe,IAAf;AACA,OAAOC,MAAP,MAAmB,eAAnB;;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,GAAM;AAAA;;AACtB,MAAMC,QAAQ,GAAGJ,WAAW,EAA5B;AAEA,MAAMK,KAAK,GAAG,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,CAAd;AACA,MAAMC,UAAU,GAAG,CAAC,IAAD,EAAO,OAAP,CAAnB;AACA,MAAMC,MAAM,GAAG,CAAC,OAAD,EAAU,OAAV,CAAf,CALsB,CAOtB;;AACA,MAAMC,MAAM,GAAGP,EAAE,CAACQ,KAAH,CAASL,QAAQ,CAACM,MAAlB,EAA0B;AAAEC,IAAAA,iBAAiB,EAAE;AAArB,GAA1B,CAAf,CARsB,CAUtB;;AACA,MAAMC,MAAM,GAAG;AACbC,IAAAA,IAAI,EAAEL,MAAM,CAACK,IAAP,IAAeR,KAAK,CAAC,CAAD,CADb;AAEbS,IAAAA,QAAQ,EAAEN,MAAM,CAACM,QAAP,IAAmBR,UAAU,CAAC,CAAD,CAF1B;AAGbS,IAAAA,IAAI,EAAEP,MAAM,CAACO,IAAP,IAAeR,MAAM,CAAC,CAAD;AAHd,GAAf,CAXsB,CAiBtB;;AACA,MAAMS,cAAc,GAAGd,MAAM,CAC1BU,MADoB,CACb,UAACK,CAAD;AAAA,WAAOA,CAAC,CAACC,IAAF,KAAWN,MAAM,CAACE,QAAzB;AAAA,GADa,EAEpBC,IAFoB,CAEf,UAACI,CAAD,EAAIC,CAAJ;AAAA,WAAWD,CAAC,CAACP,MAAM,CAACG,IAAR,CAAD,GAAiBK,CAAC,CAACR,MAAM,CAACG,IAAR,CAAlB,GAAkC,CAAC,CAAnC,GAAuC,CAAlD;AAAA,GAFe,EAGpBM,KAHoB,CAGd,CAHc,EAGXT,MAAM,CAACC,IAHI,CAAvB;AAKA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE,QAAC,eAAD;AAAA;AAAA;AAAA;AAAA,aADF,EAEGG,cAAc,CAACM,GAAf,CAAmB,UAACC,KAAD;AAAA,0BAClB;AAAK,QAAA,SAAS,EAAC,mCAAf;AAAA,+BACE,QAAC,SAAD;AAAW,UAAA,KAAK,EAAEA;AAAlB;AAAA;AAAA;AAAA;AAAA;AADF,SAAwDA,KAAK,CAACC,MAA9D;AAAA;AAAA;AAAA;AAAA,eADkB;AAAA,KAAnB,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA,WADF;AAUD,CAjCD;;GAAMrB,S;UACaH,W;;;KADbG,S;AAmCN,eAAeA,SAAf","sourcesContent":["import MovieCard from \"../components/MovieCard\";\nimport MovieListFilter from \"../components/MovieListFilter\";\nimport { useLocation } from \"react-router-dom\";\nimport qs from \"qs\";\nimport movies from \"../dummy-data\"\n\nconst MovieList = () => {\n  const location = useLocation();\n\n  const shows = [10, 20, 30];\n  const categories = [\"TV\", \"Movie\"];\n  const fields = [\"title\", \"score\"];\n\n  // Variable yang akan menampung parameter yang telah diberikan oleh user\n  const params = qs.parse(location.search, { ignoreQueryPrefix: true });\n\n  // Variable yang kita gunakan untuk melakukan penyaringan data\n  const filter = {\n    show: params.show || shows[0],\n    category: params.category || categories[0],\n    sort: params.sort || fields[0]\n  };\n\n  // Variable yang akan menyimpan data-data yang sudah difilter menggunakan variable filter diatas\n  const filteredMovies = movies\n    .filter((o) => o.type === filter.category)\n    .sort((a, b) => (a[filter.sort] > b[filter.sort] ? -1 : 1))\n    .slice(0, filter.show);\n\n  return (\n    <div className=\"row\">\n      <MovieListFilter />\n      {filteredMovies.map((movie) => (\n        <div className=\"col-lg-3 col-md-4 col-sm-6 col-12\" key={movie.mal_id}>\n          <MovieCard movie={movie} />\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default MovieList;"]},"metadata":{},"sourceType":"module"}